apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'

apply from: rootProject.file('gradle/jacoco.gradle')

android {

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {

        applicationId "com.orogersilva.spotmusicalarm"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        multiDexEnabled true

        versionCode 1
        versionName "0.1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        debug {

            storeFile rootProject.file('keystore/debug.jks')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {

            storeFile rootProject.file('keystore/release.jks')
            storePassword System.getenv("STORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    flavorDimensions "environment"

    productFlavors {

        dev {

            dimension "environment"

            applicationIdSuffix ".dev"
        }

        prod {

            dimension "environment"
        }
    }


    buildTypes {

        debug { 

            signingConfig signingConfigs.debug
        }

        release {

            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }

    variantFilter { variant ->

        def names = variant.flavors*.name
        def buildType = variant.buildType.name

        if ((names.contains("dev") && buildType == "release") ||
                (names.contains("prod") && buildType == "debug")) {
            setIgnore(true)
        }
    }

    splits {

        abi {

            enable true

            universalApk true
        }

        density {

            enable false
        }
    }

    dataBinding {
        enabled = true
    }

    sourceSets.androidTest.java.srcDirs += 'src/androidTest/kotlin'
    sourceSets.main.java.srcDirs += 'src/main/kotlin'
    sourceSets.test.java.srcDirs += 'src/test/kotlin'
}

ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4].withDefault {0}

import com.android.build.OutputFile

android.applicationVariants.all { variant ->

    variant.outputs.each { output ->

        def baseAbiVersionCode =
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))

        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode * 420000000 + variant.versionCode
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':feature-dashboard')

    implementation deps.android.support.appCompat
    implementation deps.android.support.constraintLayout
    implementation deps.android.support.design

    implementation deps.kotlin.stdlib.jdk

    testImplementation deps.kotlin.test.jdk

    androidTestImplementation deps.android.test.espresso
    androidTestImplementation deps.android.test.runner
}

apply plugin: 'com.google.gms.google-services'