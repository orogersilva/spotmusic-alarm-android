version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "base/build.gradle" }}-{{ checksum "test-utils/build.gradle" }}-{{ checksum  "spotify-sdk-wrapper/build.gradle" }}-{{ checksum  "dashboard-domain/build.gradle" }}-{{ checksum  "dashboard-data/build.gradle" }}-{{ checksum  "feature-dashboard/build.gradle" }}-{{ checksum  "installed/build.gradle" }}-{{ checksum  "instant/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "base/build.gradle" }}-{{ checksum "test-utils/build.gradle" }}-{{ checksum  "spotify-sdk-wrapper/build.gradle" }}-{{ checksum  "dashboard-domain/build.gradle" }}-{{ checksum  "dashboard-data/build.gradle" }}-{{ checksum  "feature-dashboard/build.gradle" }}-{{ checksum  "installed/build.gradle" }}-{{ checksum  "instant/build.gradle" }}
      - run:
          name: Run Code Static Analysis
          command: ./gradlew lintProdRelease
      - run:
          name: Run Unit Tests
          command: ./gradlew :dashboard-data:testReleaseUnitTest :feature-dashboard:testReleaseUnitTest
      - restore_cache:
          key: graphviz
      - run:
          name: Install graphviz
          command: sudo apt-get update; sudo apt-get install graphviz
      - save_cache:
          paths:
            - graphviz
          key: graphviz
      - run:
          name: Generate Project Dependency Graph
          command: ./gradlew projectDependencyGraphGenerator
      - store_artifacts:
          path: installed/build/reports
          destination: reports/lint
      - store_artifacts:
          path: project-dependency-graph
          destination: reports/project-dependency-graph
      - store_test_results:
          path: dashboard-data/build/test-results
      - store_test_results:
          path: feature-dashboard/build/test-results