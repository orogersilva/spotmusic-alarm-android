apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SPOTIFY_API_URL",
                "\"https://api.spotify.com/v1/\""
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.androidTest.java.srcDirs += 'src/androidTest/kotlin'
    sourceSets.main.java.srcDirs += 'src/main/kotlin'
    sourceSets.test.java.srcDirs += 'src/test/kotlin'
}

// Show test status in console.
tasks.withType(Test) {

    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':base')
    api project(':dashboard-domain')

    implementation deps.kotlin.stdlib.jdk

    kapt deps.android.arch.room.compiler
    implementation deps.android.arch.room.runtime
    implementation deps.android.arch.room.rxjava
    kapt deps.dagger.compiler
    implementation deps.dagger.core
    implementation deps.retrofit.adapter
    implementation deps.retrofit.core
    implementation deps.retrofit.gsonconverter
    implementation deps.rx.android
    implementation deps.rx.java

    testImplementation deps.kotlin.test.jdk
    testImplementation deps.mockitokotlin.core
    testImplementation deps.okhttp.test.mockwebserver
}